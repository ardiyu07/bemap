CMAKE_MINIMUM_REQUIRED ( VERSION 2.8 )

# Get the project's name
GET_FILENAME_COMPONENT(PARRENT_DIR "${CMAKE_CURRENT_SOURCE_DIR}" PATH)
GET_FILENAME_COMPONENT(BEMAP_PROJECT_NAME "${PARRENT_DIR}" NAME)
SET(BEMAP_EXECUTABLE ${BEMAP_PROJECT_NAME}_ocl)

PROJECT (${BEMAP_EXECUTABLE}) 

SET(TOPDIR ${CMAKE_CURRENT_SOURCE_DIR}/../../../)
INCLUDE(${TOPDIR}/BEMAPConfig.cmake)

# Add findOpenCL.cmake in ../../common/cmake
FIND_PACKAGE ( OpenCL REQUIRED )

INCLUDE_DIRECTORIES ( ${BEMAP_INCLUDE_DIRECTORIES} ${OPENCL_INCLUDE_DIRS})

ADD_EXECUTABLE ( ${BEMAP_EXECUTABLE} main.cpp ${BEMAP_PROJECT_NAME}.cpp ${BEMAP_PROJECT_NAME}_gold.cpp mt19937ar.c )
TARGET_LINK_LIBRARIES ( ${BEMAP_EXECUTABLE} ${OPENCL_LIBRARIES} )

GET_TARGET_PROPERTY(EXEFILE ${BEMAP_EXECUTABLE} LOCATION)
ADD_CUSTOM_COMMAND(TARGET ${BEMAP_EXECUTABLE}
  POST_BUILD
  COMMAND ${CMAKE_COMMAND} -E copy ${EXEFILE} ${BEMAP_BINARY_DIR}/.
  )

# Copy cl file
CONFIGURE_FILE (${BEMAP_PROJECT_NAME}.cl ${CMAKE_CURRENT_BINARY_DIR}/${BEMAP_PROJECT_NAME}.cl COPYONLY)
CONFIGURE_FILE (${BEMAP_PROJECT_NAME}.cl ${BEMAP_BINARY_DIR}/${BEMAP_PROJECT_NAME}.cl COPYONLY)

# If there is a common.hpp file
IF (EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/${BEMAP_PROJECT_NAME}_common.hpp)
  CONFIGURE_FILE (${BEMAP_PROJECT_NAME}_common.hpp ${CMAKE_CURRENT_BINARY_DIR}/${BEMAP_PROJECT_NAME}_common.hpp COPYONLY)
  CONFIGURE_FILE (${BEMAP_PROJECT_NAME}_common.hpp ${BEMAP_BINARY_DIR}/${BEMAP_PROJECT_NAME}_common.hpp COPYONLY)
ENDIF()